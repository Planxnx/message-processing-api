version: '3'

services:
  producer:
    build: ./producer-service
    environment:
      SERVICE_NAME: 'PRODUCER'
      SERVICE_PORT: '4000'
      KAFKA_HOST: 'kafka1:19092'
    depends_on:
      - zoo
      - kafka1
    ports:
      - 4000:4000
    networks:
      - local
  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - '2181:2181'
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./volumes/zoo/data:/data
      - ./volumes/zoo/datalog:/datalog
    networks:
      - local
  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_CREATE_TOPICS: 'test:1:1,timer-stream:1:1,message.new:1:1' # topic:partition:replica
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./volumes/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo
    networks:
      - local
      
networks:
  local:
    driver: bridge